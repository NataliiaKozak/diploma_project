*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	/* border: 0; */
	box-sizing: border-box;
}

a,
*::before,
*::after {
	display: inline-block;
}

a {
	text-decoration: none;
	color: inherit;
}

ul,
ol {
	list-style: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0;
	font-weight: normal;
}

button,
input,
textarea,
select {
	border: none;
	outline: none;
	background: transparent;
	font: inherit;
}

button {
	cursor: pointer;
}

img {
	max-width: 100%;
	height: auto;
	display: inline-block;
}

html,
body {
	height: 100%;
	min-width: 320px;
	line-height: 1;
}

:where(
p
):where([class]) {
  margin-block: 0;
}

/* :where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

input,
textarea,
select,
button {
  font: inherit;
}

html {
  height: 100%;
  scrollbar-gutter: stable;
}

html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  min-height: 100%;
  line-height: 1.5;
}

a:where([class]) {
  display: inline-flex;
}

button,
label {
  cursor: pointer;
}

:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
  fill: currentColor;
}

:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
  stroke: currentColor;
}

svg * {
  transition-property: fill, stroke;
}

:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
} */
